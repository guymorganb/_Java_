package ObjectOrientedPrograming;

public class DynamicArray {
	// keep an internal array
	
	private int data[];
	
	private int nextElementIndex;
	
	public DynamicArray(){
		data = new int[5];
		nextElementIndex = 0;		// sets initial element index to 0, so when calling add() an element is added to the next open index
	}
	
	public int size() {
		return nextElementIndex;
	}
	
	public boolean isEmpty() {
		return nextElementIndex == 0;
	}
	
	public int get(int i) {
		if(i >= nextElementIndex) {
			// throw error i is out of bounds
			return -1;	
		}
		return data[i];
	}
	
	public int set(int i, int num) {
		
		return this.data[i] = num;
		
	}
	
	public void add(int i) {
		 this.data = new int[i];
		 nextElementIndex+=1;
	}
	
	public void removeLast() {
		this.data = this.data.length-1;
	}
	
	
}
