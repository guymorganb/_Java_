package Functions;

public class binarySearch {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		// this binary search wont return -1 if target doesn't exist
//		int[] arr = {1,3,4,5,6,7,8,9,11};
//		 int target = 2;
//		 int start = 0;
//		 int end = arr.length - 1;
//		 int middleIndex = (int)Math.floor((start+end)/2);
//		 int value = arr[middleIndex];
//		 
//		 while (start < end) {
//			 
//			 if (value < target) {
//				 
//				 start = middleIndex;
//				 middleIndex = (int)Math.floor((start+end)/2);
//				 value = arr[middleIndex];
//			 }else if(value > target) {
//				 end = middleIndex;
//				 middleIndex = (int)Math.floor((start+end)/2);
//				 value = arr[middleIndex];
//			 }else if( value == target ) {
//				 System.out.println(middleIndex);
//				 break;
//			 }
//		 }
	// this binary search should return -1 if the element doesnt exist.
			        int[] arr2 = {1, 3, 4, 5, 6, 7, 8, 9, 11};
			        int target2 = 2;
			        int start2 = 0;
			        int end2 = arr2.length - 1;
			        int middleIndex2 = (int) Math.floor((start2 + end2) / 2);
			        int value2 = arr2[middleIndex2];

			        while (start2 <= end2) {
			            if (value2 < target2) {
			                start2 = middleIndex2 + 1;
			                middleIndex2 = (int) Math.floor((start2 + end2) / 2);
			                value2 = arr2[middleIndex2];
			            } else if (value2 > target2) {
			                end2 = middleIndex2 - 1;
			                middleIndex2 = (int) Math.floor((start2 + end2) / 2);
			                value2 = arr2[middleIndex2];
			            } else if (value2 == target2) {
			                System.out.println(middleIndex2);
			                return; // Target found, exit the method
			            }
			        }

			        System.out.println(-1); // Target not found
			    }
			}

	


